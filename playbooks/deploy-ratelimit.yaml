# This file deploys the rate limit service and its backing Redis database, along with configuration.

apiVersion: v1
kind: ConfigMap
metadata:
  name: ratelimit-config
  namespace: istio-system
data:
  # Set in config to use domain istio-ratelimit (same as EnvoyFilter). 
  # Also set in config the rule that each client IP only has 10 requests per minute.
  config.yaml: |
    domain: istio-ratelimit
    descriptors:
      - key: remote_address
        rate_limit:
          unit: minute
          requests_per_unit: 10

---

# Define a deployment running the Envoy rate limit service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratelimit
  namespace: istio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratelimit
  template:
    metadata:
      labels:
        app: ratelimit
    spec:
      containers:
        - name: ratelimit
          image: envoyproxy/ratelimit:latest 
          ports:
            - containerPort: 8080   # Expose 8080 for HTTP.
            - containerPort: 8081   # Expose 8081 for gRPC (used by the Envoy proxy).
          volumeMounts:
            - name: config-volume   # Mount the config file from the ConfigMap above.
              mountPath: /data
          env:
            - name: USE_STATSD
              value: "false"
            - name: LOG_LEVEL
              value: debug
            - name: REDIS_SOCKET_TYPE
              value: tcp
            - name: REDIS_URL
              value: redis:6379
      volumes:
        - name: config-volume
          configMap:
            name: ratelimit-config

---
# Create a Kubernetes Service to expose the ratelimit Deployment on ports 8080 (HTTP)and 8181 (gRPC)
apiVersion: v1
kind: Service
metadata:
  name: ratelimit
  namespace: istio-system
spec:
  ports:
    - name: http
      port: 8080
    - name: grpc
      port: 8081
  selector:
    app: ratelimit

---

# Deploy a standard Redis pod in the same namespace. Used by the rate limit service to store counters.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: istio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:6.2
          ports:
            - containerPort: 6379

---

# Expose Redis so that the rate limit container can connect to it.
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: istio-system
spec:
  ports:
    - port: 6379
  selector:
    app: redis
