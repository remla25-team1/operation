- hosts: all
  connection: local
  become: yes
  tasks:
    # Init cluster
    - name: Check if Kubernetes has already been initialized
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: kube_init

    - name: Initialize Kubernetes cluster
      ansible.builtin.command: >
        kubeadm init 
        --apiserver-advertise-address={{ ctrl_ip }}
        --node-name={{ target }}
        --pod-network-cidr=10.244.0.0/16
        --ignore-preflight-errors=NumCPU
      when: not kube_init.stat.exists

    # Setup kubectl
    - name: Create .kube directory for vagrant user
      ansible.builtin.file:
        path: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: "0755"

    - name: Set up kubeconfig for vagrant user
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: yes
        owner: vagrant
        group: vagrant
        mode: "0644"

    - name: Ensure shared folder /vagrant_shared exists
      ansible.builtin.file:
        path: /vagrant_shared
        state: directory
        mode: "0755"

    - name: Copy kubeconfig to shared folder for host use
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /vagrant_shared/admin.conf
        remote_src: yes
        owner: vagrant
        group: vagrant
        mode: "0644"

    # Create Pod network
    - name: Download Flannel YAML configuration
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
        dest: /tmp/kube-flannel.yml
        mode: "0644"

    - name: Add --iface=eth1 to the Flannel DaemonSet args section
      replace:
        path: /tmp/kube-flannel.yml
        regexp: '(\s+)- --kube-subnet-mgr'
        replace: '\1- --iface=eth1\n\1- --kube-subnet-mgr'

    - name: Apply Flannel configuration to the cluster
      ansible.builtin.shell: >
        kubectl apply -f /tmp/kube-flannel.yml --validate=false
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Clean up Flannel YAML file
      ansible.builtin.file:
        path: /tmp/kube-flannel.yml
        state: absent

    # Install Helm
    - name: Add Helm GPG key
      ansible.builtin.apt_key:
        url: https://baltocdn.com/helm/signing.asc
        keyring: /usr/share/keyrings/helm-archive-keyring.gpg
        state: present

    - name: Add Helm apt repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/helm-archive-keyring.gpg] https://baltocdn.com/helm/stable/debian/ all main"
        state: present
        filename: helm-stable
        update_cache: yes

    - name: Install Helm
      ansible.builtin.apt:
        name: helm
        state: present

    # Install Helm package
    - name: Ensure helm-diff plugin is installed
      become: yes
      become_user: vagrant
      ansible.builtin.command: helm plugin install https://github.com/databus23/helm-diff
      args:
        creates: /home/vagrant/.local/share/helm/plugins/helm-diff
